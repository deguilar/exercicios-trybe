/*Operador NOT
Vamos ver um exemplo do que o operador NOT (ou !, no JavaScript) faz. Voc√™ consegue prever o que esse c√≥digo vai imprimir?*/


console.log((2 + 2) === 4);
// Esse c√≥digo deve retornar true, n√£o √©? Afinal, 2 + 2 resultar em 4 √© uma declara√ß√£o verdadeira. E se adicionarmos o operador NOT antes dessa declara√ß√£o?


console.log(!(2 + 2) === 4);
// Se voc√™ executar esse c√≥digo, vai perceber que o valor impresso √© o oposto do anterior. ü§î

// Estamos diante de um operador muito poderoso. Ele pode inverter o valor booleano de um elemento. Isso mesmo! Se tivermos uma vari√°vel ou um valor considerado true, podemos gerar o resultado oposto simplesmente fazendo !vari√°vel, ou seja, false.

// Ent√£o, sabendo que o resultado original da opera√ß√£o √© true, quando √© inserido o operador NOT antes dela, obtemos o valor contr√°rio √† resposta final, que √© false.

// O conceito de truthy e falsy tamb√©m se aplica aqui, por isso n√£o estamos limitados apenas aos tipos primitivos booleanos. Podemos usar em:

//Strings
let squirtle = "melhor pokemon inicial";

console.log(!squirtle); // false

//N√∫meros
console.log(!42); // false

console.log(!0); // true
// O n√∫mero 0 tem o valor "falsy" no JavaScript. Logo, seu oposto √© true.

//Valores nulos
console.log(!null); // true

//Valores indefinidos
console.log(!undefined); // true

//E em muitos outros elementos!